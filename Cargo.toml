[workspace]
resolver = "2"
members = [
    "sperr-sys"
]

[workspace.package]
edition = "2021"
authors = ["Juniper Tyree <juniper.tyree@helsinki.fi>"]
repository = "https://github.com/juntyr/sperr-rs"
license = "MPL-2.0"
rust-version = "1.82"

[workspace.dependencies]
# workspace-internal crates
sperr = { version = "0.1", path = ".", default-features = false }
sperr-sys = { version = "0.1", path = "sperr-sys", default-features = false }

# crates.io third-party dependencies
bindgen = { version = "0.71", default-features = false }
cmake = { version = "0.1.26", default-features = false }
ndarray = { version = "0.16", default-features = false }
openmp-sys = { version = "1.2", default-features = false }
thiserror = { version = "2.0", default-features = false }

[workspace.lints.rust]
unsafe_code = "deny"
unstable_features = "forbid"
unused_crate_dependencies = "warn"

missing_docs = "warn"

[workspace.lints.clippy]
complexity = { priority = -1, level = "warn" }
correctness = { priority = -1, level = "warn" }
nursery = { priority = -1, level = "warn" }
pedantic = { priority = -1, level = "warn" }
perf = { priority = -1, level = "warn" }
style = { priority = -1, level = "warn" }
suspicious = { priority = -1, level = "warn" }

unwrap_used = "warn"
expect_used = "warn"
indexing_slicing = "warn"
panic = "warn"
todo = "warn"
unimplemented = "warn"
unreachable = "warn"
module_name_repetitions = "allow"

cargo = { priority = -1, level = "warn" }
cargo_common_metadata = "warn"
multiple_crate_versions = "warn"


[package]
name = "sperr"
version = "0.1.0"
edition = { workspace = true }
authors = { workspace = true }
repository = { workspace = true }
license = { workspace = true }
rust-version = { workspace = true }

description = "High-level Rust bindings to the SPERR compressor"
readme = "README.md"
categories = ["api-bindings", "compression", "encoding"]
keywords = ["SPERR", "compression", "encoding"]

[features]
openmp = ["sperr-sys/openmp"]

[dependencies]
ndarray = { workspace = true }
sperr-sys = { workspace = true }
thiserror = { workspace = true }

[lints]
workspace = true
